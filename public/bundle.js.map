{
  "version": 3,
  "sources": ["../scripts/main.js"],
  "sourcesContent": ["// TODO: refactor code to be around main, importing / exporting\r\n\r\n\r\n// page manager\r\n\r\nconst changePage = (page) => {\r\n\r\n  const mainEl = document.querySelector('main')\r\n  const panelEl = document.querySelector('.panel')\r\n  const buttonsEl = document.querySelector('.buttons')\r\n  const introEl = document.querySelector('.intro')\r\n  \r\n    if(page=='home') {\r\n      mainEl.classList.remove('gameplay')\r\n      mainEl.classList.add('home')\r\n      introEl.classList.remove('display-none')\r\n      panelEl.classList.add('display-none')\r\n      buttonsEl.classList.add('display-none')\r\n    }\r\n    if(page=='gameplay') {\r\n      mainEl.classList.remove('home')\r\n      mainEl.classList.add('gameplay')\r\n      introEl.classList.add('display-none')\r\n      panelEl.classList.remove('display-none')\r\n      buttonsEl.classList.remove('display-none')\r\n    }\r\n  \r\n  }\r\n  \r\n  const setViewManager = () => {\r\n    const playEl = document.querySelector('.play-game')\r\n    const quitEls = document.querySelectorAll('.quit-game')\r\n  \r\n    playEl.addEventListener('click', () => {\r\n      changePage('gameplay')\r\n    })\r\n  \r\n    quitEls.forEach(quitEl => quitEl.addEventListener('click', () => {\r\n      changePage('home')\r\n    }))\r\n  }\r\n  \r\n  setViewManager()\r\n\r\n\r\n\r\n\r\n\r\n\r\n// modal-manager\r\n\r\n\r\n\r\nconst pauseButtonEl = document.querySelector('.pause-button')\r\nconst toQuitButtonEl = document.querySelector('.to-quit-button')\r\nconst quitButtonEl = document.querySelector('.quit-game')\r\nconst continueButtonEls = document.querySelectorAll('.return-button')\r\nconst pauseToQuitButton = document.querySelector('.pause-to-quit-button')\r\n\r\nconst pauseModalEl = document.querySelector('.pause-modal')\r\nconst quitModalEl = document.querySelector('.quit-modal')\r\n\r\n// function - game pause\r\n// maybe I will need to import this logic from main module\r\nfunction gamePauseToggle() {\r\n  //TODO: quit game logic\r\n  void 0;\r\n}\r\n\r\nfunction handleQuitGame() {\r\n  // TODO: quit game logic\r\n}\r\n\r\n// handlers\r\n\r\npauseButtonEl.addEventListener('click', () => {\r\n  gamePauseToggle()\r\n  pauseModalEl.classList.toggle('invisible')\r\n})\r\n\r\ncontinueButtonEls.forEach(continueButtonEl => {\r\n  continueButtonEl.addEventListener('click', () => {\r\n    gamePauseToggle()\r\n    if(!pauseModalEl.classList.contains('invisible'))  {\r\n      pauseModalEl.classList.add('invisible')\r\n    }\r\n    if(!quitModalEl.classList.contains('invisible')) {\r\n      quitModalEl.classList.add('invisible')\r\n    }\r\n  })\r\n})\r\n\r\ntoQuitButtonEl.addEventListener('click', () => {\r\n  gamePauseToggle()\r\n  quitModalEl.classList.toggle('invisible')\r\n})\r\n\r\nquitButtonEl.addEventListener('click', () => {\r\n  handleQuitGame()\r\n  quitModalEl.classList.toggle('invisible')\r\n})\r\n\r\npauseToQuitButton.addEventListener('click', () => {\r\n  pauseModalEl.classList.toggle('invisible')\r\n  quitModalEl.classList.toggle('invisible')\r\n})\r\n\r\n\r\n\r\n// engine\r\n\r\n\r\n\r\nconst state = {\r\n  view: {\r\n    squares: document.querySelectorAll('.square'),\r\n    enemy: document.querySelector('.enemy'),\r\n    timeLeft: document.querySelector('#time'),\r\n    score: document.querySelector('#score'),\r\n    lifes: document.querySelector('#lifes')\r\n  },\r\n  values: {\r\n    defaults: {\r\n      initialLifesQuantity: 5,\r\n      initialSpeed: 900,\r\n      initialTime: 30,\r\n    },\r\n    audios: {\r\n      effects: {\r\n        punch: new Audio('../sounds/punch.wav'),\r\n        gettingHit: new Audio('../sounds/getting_hit.wav'),\r\n        coin: new Audio('../sounds/coin.wav'),\r\n        failure: new Audio('../sounds/mocking_failure.wav'),\r\n        gameOver: new Audio('../sounds/game_over.wav'),\r\n      },\r\n      songs: {\r\n        gameplay: new Audio('../sounds/gameplay.wav'),\r\n      },\r\n    },\r\n    hitBoxTimer: null,\r\n    mainTimer: null,\r\n    speed: 900,\r\n    enemySquareId: null,\r\n    hits: 0,\r\n  }\r\n}\r\n\r\n\r\nfunction getRandomSquare() {\r\n  state.view.squares.forEach(square => {\r\n    square.classList.remove('enemy')\r\n  })\r\n\r\n  let randomNumber = Math.floor(Math.random()*9)\r\n  let randomSquare = state.view.squares[randomNumber]\r\n  state.values.enemySquareId = randomSquare.id\r\n\r\n  randomSquare.classList.add('enemy')\r\n  state.view.enemy = document.querySelector('.enemy')\r\n}\r\n\r\nfunction moveEnemy() {\r\n  clearInterval(state.values.hitBoxTimer)\r\n  getRandomSquare()\r\n  state.values.hitBoxTimer = setInterval(getRandomSquare, state.values.speed)\r\n}\r\n\r\n\r\nasync function addListenerHitBox() {\r\n  state.view.squares.forEach(async (square) => {\r\n    square.addEventListener('mousedown', onMouseDownSquare)\r\n  })\r\n}\r\n\r\nasync function onMouseDownSquare(event) {\r\n\r\n  await state.values.audios.effects.punch.play()\r\n  if(event.target.id == state.values.enemySquareId) {\r\n    hit()\r\n  } else {\r\n    await failed()\r\n  }\r\n}\r\n\r\n\r\n// Delay\r\n\r\nfunction delayGame(millisec) {\r\n  clearInterval(state.values.hitBoxTimer)\r\n  setTimeout(moveEnemy, millisec)\r\n}\r\n\r\n\r\n// Success / Fail Functions\r\n\r\n\r\nfunction hit() {\r\n  // aqumentar o tempo\r\n  addSecondsToStopWatch(3)\r\n  // aumentar a pontua\u00E7\u00E3o\r\n  const initialScore = parseInt(state.view.score.innerText)\r\n  const newScore = initialScore+10\r\n  state.view.score.innerText = newScore\r\n  delayGame(900)\r\n  // disparar o som\r\n  state.values.audios.effects.gettingHit.play()\r\n  state.values.audios.effects.coin.play()\r\n  // verificar numero de hits, para subir o n\u00EDvel\r\n  state.values.hits+=1\r\n  const newSpeed = state.values.defaults.initialSpeed-(Math.floor(state.values.hits/2)*60)\r\n  if(newSpeed>0) {\r\n    state.values.speed = newSpeed\r\n  }\r\n}\r\n\r\nasync function failed() {\r\n  // tocar audio de failure\r\n  // diminuir 1 vida\r\n  const lifesQuantity = state.view.lifes.innerText.substring(1)\r\n  const newLifesQuantity = lifesQuantity-1\r\n  state.view.lifes.innerText = `x${newLifesQuantity}`\r\n  \r\n  //TODO: verificar game-over\r\n  if(newLifesQuantity==0) {\r\n    gameOver()\r\n  } else {\r\n      await state.values.audios.effects.failure.play()\r\n      delayGame(1000)\r\n  }\r\n}\r\n\r\n// criar game-over voltando pro inicio \r\n// TODO: criar tela de game-over\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// start / pause / stop game\r\n\r\nfunction initGame() {\r\n  setGamePlay()\r\n  playMainSong()\r\n  moveEnemy()\r\n}\r\n\r\nfunction pauseGame() {\r\n  pauseAllSounds()\r\n  pauseStopWatch()\r\n  clearInterval(state.values.hitBoxTimer)\r\n  state.values.hitBoxTimer = null\r\n}\r\n\r\nfunction continueGame() {\r\n  playMainSong()\r\n  returnStopWatch()\r\n  moveEnemy()\r\n}\r\n\r\nfunction stopGame() {\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction setButtons() {\r\n  setPauseAndToQuitButton()\r\n  setReturnButtons()\r\n}\r\n\r\n//HERE\r\n\r\nfunction resetGameValues() {\r\n  state.view.lifes.innerText=`x${state.values.defaults.initialLifesQuantity}`\r\n  state.view.score.innerHTML=0\r\n  state.values.hits=0\r\n  state.values.speed=state.values.defaults.initialSpeed\r\n  clearInterval(state.values.hitBoxTimer)\r\n}\r\n\r\nfunction resetGameValuesMantainSome() {\r\n  state.view.lifes.innerText=`x${state.values.defaults.initialLifesQuantity}`\r\n  state.values.hits=0\r\n  state.values.speed=state.values.defaults.initialSpeed\r\n  clearInterval(state.values.hitBoxTimer)\r\n}\r\n\r\nfunction setGamePlay() {\r\n  setButtons()\r\n  addListenerHitBox()\r\n  resetGameValues()\r\n  resetStopWatch()\r\n}\r\n\r\nfunction setPauseAndToQuitButton() {\r\n  const pauseButton = document.querySelector('.pause-button')\r\n  const toQuitButton = document.querySelector('.to-quit-button')\r\n\r\n\r\n\r\n\r\n  pauseButton.addEventListener('click', pauseButtonConfig)\r\n  toQuitButton.addEventListener('click', pauseGame)\r\n}\r\n\r\nfunction pauseButtonConfig() {\r\n  pauseGame()\r\n  setPauseToQuitButton()\r\n}\r\n\r\nfunction toQuitButtonConfig() {\r\n  pauseGame()\r\n  setQuitButton()\r\n}\r\n\r\nfunction setPauseToQuitButton() {\r\n  const pauseToQuitButton = document.querySelector('.pause-to-quit-button')\r\n  pauseToQuitButton.addEventListener('click', setQuitButton)\r\n}\r\n\r\nfunction setQuitButton() {\r\n  const stopButton = document.querySelector('.quit-confirm-button')\r\n  stopButton.addEventListener('click', stopGame)\r\n}\r\n\r\nfunction setReturnButtons() {\r\n  document.querySelectorAll('.return-button').forEach(buttonEl => buttonEl.addEventListener('click', continueGame))\r\n}\r\n\r\n\r\n\r\nconst startButton = document.querySelector('.play-game')\r\n\r\nstartButton.addEventListener('click', () => {\r\n  initGame()\r\n})\r\n\r\n\r\n\r\n// Set stopWatch\r\n\r\nfunction resetStopWatch() {\r\n  state.view.timeLeft.innerText=state.values.defaults.initialTime\r\n  clearInterval(state.values.mainTimer)\r\n  state.values.mainTimer = setInterval(stopWatchConfig, 1000)\r\n}\r\n\r\nfunction freezeStopWatch() {\r\n  state.view.timeLeft.innerText=0\r\n  clearInterval(state.values.mainTimer)\r\n}\r\n\r\nfunction verifyTimeLeft() {\r\n  if(state.view.timeLeft.innerText==0) {\r\n    gameOver()\r\n  }\r\n}\r\n\r\nfunction stopWatchConfig() {\r\n  const time = parseInt(state.view.timeLeft.innerText)\r\n  console.log(state.view.timeLeft.innerText)\r\n  state.view.timeLeft.innerText= time-1\r\n  verifyTimeLeft()\r\n}\r\n\r\nfunction addSecondsToStopWatch(sec) {\r\n  const time = parseInt(state.view.timeLeft.innerText)\r\n  state.view.timeLeft.innerText = time + sec\r\n}\r\n\r\n\r\nfunction pauseStopWatch() {\r\n  clearInterval(state.values.mainTimer)\r\n}\r\n\r\nfunction returnStopWatch() {\r\n  state.values.mainTimer = setInterval(stopWatchConfig, 1000)\r\n}\r\n\r\n\r\n\r\n\r\n// Game Over\r\n\r\n// tocar m\u00FAsica no in\u00EDcio\r\nfunction playMainSong() {\r\n  // delete state.values.audios.songs.gameplay\r\n  // state.values.audios.songs.gameplay = new Audio('../sounds/gameplay.wav')\r\n  // state.values.audios.songs.gameplay.muted=true\r\n  state.values.audios.songs.gameplay.loop = true\r\n  state.values.audios.songs.gameplay.volume = 0.5\r\n  state.values.audios.songs.gameplay.play()\r\n}\r\n\r\n\r\nfunction stopAllSounds() {\r\n  for(const audio of Object.values(state.values.audios.effects)) {\r\n    audio.pause()\r\n    audio.currentTime=0\r\n  }\r\n  for(const audio of Object.values(state.values.audios.songs)) {\r\n    audio.pause()\r\n    audio.currentTime=0\r\n  }\r\n}\r\nfunction pauseAllSounds() {\r\n  for(const audio of Object.values(state.values.audios.effects)) {\r\n    audio.pause()\r\n  }\r\n  for(const audio of Object.values(state.values.audios.songs)) {\r\n    audio.pause()\r\n  }\r\n}\r\n\r\nasync function gameOver() {\r\n  handleQuitGame()\r\n  stopAllSounds()\r\n  state.values.audios.effects.gameOver.play()\r\n  changePage('home')\r\n  freezeStopWatch()\r\n}\r\n\r\n\r\nfunction handleQuitGame() {\r\n  resetGameValuesMantainSome()\r\n}\r\n\r\nquitButtonEl.addEventListener('click', () => {\r\n  handleQuitGame()\r\n})\r\n\r\n"],
  "mappings": "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",
  "names": ["changePage", "page", "mainEl", "panelEl", "buttonsEl", "introEl", "setViewManager", "playEl", "quitEls", "quitEl", "pauseButtonEl", "toQuitButtonEl", "quitButtonEl", "continueButtonEls", "pauseToQuitButton", "pauseModalEl", "quitModalEl", "pauseButtonEl", "pauseModalEl", "continueButtonEls", "continueButtonEl", "quitModalEl", "toQuitButtonEl", "quitButtonEl", "handleQuitGame", "pauseToQuitButton", "state", "getRandomSquare", "square", "randomNumber", "randomSquare", "moveEnemy", "addListenerHitBox", "__async", "onMouseDownSquare", "event", "hit", "failed", "delayGame", "millisec", "addSecondsToStopWatch", "newScore", "newSpeed", "newLifesQuantity", "gameOver", "initGame", "setGamePlay", "playMainSong", "pauseGame", "pauseAllSounds", "pauseStopWatch", "continueGame", "returnStopWatch", "stopGame", "setButtons", "setPauseAndToQuitButton", "setReturnButtons", "resetGameValues", "resetGameValuesMantainSome", "resetStopWatch", "pauseButton", "toQuitButton", "pauseButtonConfig", "setPauseToQuitButton", "setPauseToQuitButton", "setQuitButton", "stopGame", "setReturnButtons", "buttonEl", "continueGame", "startButton", "initGame", "resetStopWatch", "state", "stopWatchConfig", "freezeStopWatch", "verifyTimeLeft", "gameOver", "time", "addSecondsToStopWatch", "sec", "pauseStopWatch", "returnStopWatch", "playMainSong", "stopAllSounds", "audio", "pauseAllSounds", "__async", "handleQuitGame", "changePage", "resetGameValuesMantainSome", "quitButtonEl"]
}
