{
  "version": 3,
  "sources": ["../src/scripts/common/events/screen-change.event.js", "../src/scripts/engine/debouncer.js", "../src/scripts/engine/sounds.js", "../src/scripts/engine/stopwatch.js", "../src/scripts/engine/gameplay.js", "../src/scripts/engine/listeners.js", "../src/scripts/engine/game-manager.js", "../src/scripts/engine/engine.js", "../src/scripts/common/utils/view-manager.util.js", "../src/scripts/common/utils/modal-manager.util.js", "../src/scripts/common/utils/event-manager.util.js", "../src/scripts/main.js"],
  "sourcesContent": ["\r\nexport const screenChangeEvent = new Event('screenChange')\r\n", "export function debouncer(el, time) {\r\n\r\n  let interval\r\n  let timeToBLink = time??450 \r\n  let currentTime = 0\r\n  let gap = 15\r\n\r\n  interval = setInterval( () => {\r\n    currentTime+=gap\r\n    el.style.opacity= '.8'\r\n\r\n    blink(el)\r\n    if(currentTime>=timeToBLink) {\r\n      resetElProps(el)\r\n      clearInterval(interval)\r\n    }\r\n\r\n  }, gap)\r\n\r\n}\r\n\r\nfunction blink(el) {\r\n  el.classList.toggle('background-image-none')\r\n}\r\n\r\nfunction resetElProps(el) {\r\n  el.classList.remove('background-image-none')\r\n  el.style.opacity= '1'\r\n}", "// sound effects\r\n\r\n// tocar m\u00FAsica no in\u00EDcio\r\nexport function playMainSong(state) {\r\n  state.values.audios.songs.gameplay.loop = true\r\n  state.values.audios.songs.gameplay.volume = 0.5\r\n  state.values.audios.songs.gameplay.play()\r\n}\r\n\r\nexport function stopAllSounds(state) {\r\n  for(const audio of Object.values(state.values.audios.effects)) {\r\n    audio.pause()\r\n    audio.currentTime=0\r\n  }\r\n  for(const audio of Object.values(state.values.audios.songs)) {\r\n    audio.pause()\r\n    audio.currentTime=0\r\n  }\r\n}\r\nexport function pauseAllSounds(state) {\r\n  for(const audio of Object.values(state.values.audios.effects)) {\r\n    audio.pause()\r\n  }\r\n  for(const audio of Object.values(state.values.audios.songs)) {\r\n    audio.pause()\r\n  }\r\n}", "import { gameOver } from \"./gameplay\"\r\n\r\nexport function resetStopWatch(state) {\r\n  state.view.timeLeft.innerText=state.values.defaults.initialTime\r\n  clearInterval(state.values.mainTimer)\r\n  state.values.mainTimer = setInterval(() => stopWatchConfig(state), 1000)\r\n}\r\n\r\nexport function freezeStopWatch(state) {\r\n  state.view.timeLeft.innerText=0\r\n  clearInterval(state.values.mainTimer)\r\n}\r\n\r\nexport function verifyTimeLeft(state) {\r\n  if(state.view.timeLeft.innerText==0) {\r\n    gameOver(state)\r\n  }\r\n}\r\n\r\nexport function stopWatchConfig(state) {\r\n  const time = parseInt(state.view.timeLeft.innerText)\r\n  state.view.timeLeft.innerText= time-1\r\n  verifyTimeLeft(state)\r\n}\r\n\r\nexport function pauseStopWatch(state) {\r\n  clearInterval(state.values.mainTimer)\r\n}\r\n\r\nexport function returnStopWatch(state) {\r\n  state.values.mainTimer = setInterval(() => stopWatchConfig(state), 1000)\r\n}\r\n\r\nexport function addSecondsToStopWatch(state, sec) {\r\n  const time = parseInt(state.view.timeLeft.innerText)\r\n  state.view.timeLeft.innerText = time + sec\r\n}", "import { changePage } from \"../common/utils/view-manager.util\"\r\nimport { debouncer } from \"./debouncer\"\r\nimport { handleEndGame } from \"./game-manager\"\r\nimport { stopAllSounds } from \"./sounds\"\r\nimport { addSecondsToStopWatch, freezeStopWatch } from \"./stopwatch\"\r\n\r\nfunction setRandomSquare(state) {\r\n  state.view.squares.forEach(square => {\r\n    square.classList.remove('enemy')\r\n  })\r\n\r\n  let randomNumber = Math.floor(Math.random()*9)\r\n  let randomSquare = state.view.squares[randomNumber]\r\n  state.values.enemySquareId = randomSquare.id\r\n\r\n  randomSquare.classList.add('enemy')\r\n  state.view.enemy = document.querySelector('.enemy')\r\n}\r\n\r\n\r\nexport function moveEnemy(state) {\r\n  unlockPanel(state)\r\n  clearInterval(state.values.hitBoxTimer)\r\n  setRandomSquare(state)\r\n\r\n  state.values.hitBoxTimer = setInterval(() => {\r\n    return setRandomSquare(state)\r\n  }, state.values.speed)\r\n\r\n\r\n}\r\n\r\n\r\n// hit\r\n\r\nexport function hit(state, hitSquareId) {\r\n  if(!state.values.control.isLockedPanel) {\r\n    console.log(state.values.control.isLockedPanel)\r\n  // aumentar o tempo\r\n  addSecondsToStopWatch(state, 3)\r\n  // aumentar a pontua\u00E7\u00E3o\r\n  const initialScore = parseInt(state.view.score.innerText)\r\n  const newScore = initialScore+10\r\n  state.view.score.innerText = newScore\r\n  debouncer(document.getElementById(`${hitSquareId}`))\r\n  delayGame(state, 400)\r\n\r\n  // disparar o som\r\n  state.values.audios.effects.gettingHit.currentTime=0\r\n  state.values.audios.effects.gettingHit.play()\r\n  state.values.audios.effects.coin.play()\r\n  // verificar numero de hits, para subir o n\u00EDvel\r\n  state.values.hits+=1\r\n  const newSpeed = state.values.defaults.initialSpeed-(Math.floor(state.values.hits/2)*60)\r\n  if(newSpeed>0) {\r\n    state.values.speed = newSpeed\r\n  }\r\n  } else {\r\n    state.values.audios.effects.deny.volume=0.2\r\n    state.values.audios.effects.deny.play()\r\n  }\r\n\r\n}\r\n\r\n// hit functions\r\n\r\nexport function delayGame(state, millisec) {\r\n  clearInterval(state.values.hitBoxTimer)\r\n  lockPanel(state)\r\n  setTimeout(() => moveEnemy(state), millisec)\r\n}\r\n\r\n// failure\r\n\r\nexport function failed(state) {\r\n  if(!state.values.control.isLockedPanel) {\r\n    const lifesQuantity = state.view.lifes.innerText.substring(1)\r\n    const newLifesQuantity = lifesQuantity-1\r\n    state.view.lifes.innerText = `x${newLifesQuantity}`\r\n  \r\n    if(newLifesQuantity==0) {\r\n      gameOver(state)\r\n    } else {\r\n        state.values.audios.effects.failure.currentTime=0\r\n        state.values.audios.effects.failure.play()\r\n    }\r\n  } else {\r\n    state.values.audios.effects.deny.volume=0.2\r\n    state.values.audios.effects.deny.play()\r\n  }\r\n}\r\n\r\n\r\nexport async function gameOver(state) {\r\n  clearInterval(state.values.hitBoxTimer)\r\n\r\n  handleEndGame(state)\r\n  stopAllSounds(state)\r\n  state.values.audios.effects.gameOver.play()\r\n  changePage('home')\r\n  freezeStopWatch(state)\r\n}\r\n\r\nexport function lockPanel(state) {\r\n  state.values.control.isLockedPanel = true;\r\n}\r\n\r\nexport function unlockPanel(state) {\r\n  state.values.control.isLockedPanel = false;\r\n}\r\n\r\n", "// listener adders\r\n\r\nimport { continueGame, pauseGame, resetGameValues, stopGame } from \"./game-manager\"\r\nimport { failed, hit } from \"./gameplay\"\r\nimport { resetStopWatch } from \"./stopwatch\"\r\n \r\nexport function addListenerHitBox(state) {\r\n  state.view.squares.forEach((square) => {\r\n    square.onmousedown = onMouseDownSquare.bind(null, state)\r\n  })\r\n}\r\n\r\n function onMouseDownSquare(state, event) {\r\n    state.values.audios.effects.punch.play()\r\n    if(event.target.id == state.values.enemySquareId) {\r\n      hit(state, event.target.id)\r\n    } else {\r\n      failed(state)\r\n    }\r\n}\r\n\r\nexport function setPauseAndToQuitButton(state) {\r\n  const pauseButton = document.querySelector('.pause-button')\r\n  const toQuitButton = document.querySelector('.to-quit-button')  \r\n  pauseButton.onclick = pauseButtonConfig.bind(null, state)\r\n  toQuitButton.onclick = pauseGame.bind(null, state)\r\n}\r\n\r\nexport function pauseButtonConfig(state) {\r\n  pauseGame(state)\r\n  setPauseToQuitButton(state)\r\n}\r\n\r\nexport function toQuitButtonConfig(state) {\r\n  pauseGame(state)\r\n  setQuitButton(state)\r\n}\r\n\r\nexport function setPauseToQuitButton(state) {\r\n  const pauseToQuitButton = document.querySelector('.pause-to-quit-button')\r\n  pauseToQuitButton.onclick = setQuitButton.bind(null, state)\r\n}\r\n\r\nexport function setQuitButton(state) {\r\n  const stopButton = document.querySelector('.quit-confirm-button')\r\n  stopButton.onclick = stopGame.bind(null, state)\r\n}\r\n\r\nexport function setReturnButtons(state) {\r\n  document.querySelectorAll('.return-button').forEach(buttonEl => buttonEl.onclick = continueGame.bind(null, state))\r\n}\r\n\r\nfunction setButtons(state) {\r\n  setPauseAndToQuitButton(state)\r\n  setReturnButtons(state)\r\n}\r\n\r\nexport function setGamePlay(state) {\r\n  resetGameValues(state)\r\n  setButtons(state)\r\n  addListenerHitBox(state)\r\n  resetStopWatch(state)\r\n}", "  // start / pause / stop game\r\n\r\nimport { moveEnemy } from \"./gameplay\"\r\nimport { setGamePlay } from \"./listeners\"\r\nimport { pauseAllSounds, playMainSong } from \"./sounds\"\r\nimport { pauseStopWatch, returnStopWatch } from \"./stopwatch\"\r\n\r\n  \r\n  export function initGame(state) {\r\n    setGamePlay(state)\r\n    playMainSong(state)\r\n    moveEnemy(state)\r\n  }\r\n  \r\n  export function pauseGame(state) {\r\n    pauseAllSounds(state)\r\n    pauseStopWatch(state)\r\n    clearInterval(state.values.hitBoxTimer)\r\n    state.values.hitBoxTimer = null\r\n  }\r\n  \r\n  export function continueGame(state) {\r\n    playMainSong(state)\r\n    returnStopWatch(state)\r\n    moveEnemy(state)\r\n  }\r\n  \r\n  export function stopGame(state) {\r\n    handleQuitGame(state)\r\n  }\r\n\r\n\r\n\r\n\r\n  export function handleEndGame(state) {\r\n    resetGameValuesMantainSome(state)\r\n  }\r\n  export function handleQuitGame(state) {\r\n    resetGameValues(state)\r\n  }\r\n  \r\n  export function resetGameValues(state) {\r\n    state.view.lifes.innerText=`x${state.values.defaults.initialLifesQuantity}`\r\n    state.view.score.innerHTML=0\r\n    state.view.timeLeft.innerText=0\r\n    state.values.hits=0\r\n    state.values.speed=state.values.defaults.initialSpeed\r\n    clearInterval(state.values.hitBoxTimer)\r\n    clearInterval(state.values.mainTimer)\r\n  }\r\n  \r\n  export function resetGameValuesMantainSome(state) {\r\n    state.view.lifes.innerText=`x${state.values.defaults.initialLifesQuantity}`\r\n    state.view.timeLeft.innerText=0\r\n    state.values.hits=0\r\n    state.values.speed=state.values.defaults.initialSpeed\r\n    clearInterval(state.values.hitBoxTimer)\r\n    clearInterval(state.values.mainTimer)\r\n  }\r\n  ", "/**\r\n * \r\n *  Relatives paths here needs to be settled as in the final built folder\r\n */\r\n\r\nimport { initGame } from \"./game-manager\"\r\n\r\nexport function playGame () {\r\n\r\n  const state = {\r\n    view: {\r\n      squares: document.querySelectorAll('.square'),\r\n      enemy: document.querySelector('.enemy'),\r\n      timeLeft: document.querySelector('#time'),\r\n      score: document.querySelector('#score'),\r\n      lifes: document.querySelector('#lifes')\r\n    },\r\n    values: {\r\n      defaults: {\r\n        initialLifesQuantity: 5,\r\n        initialSpeed: 800,\r\n        initialTime: 30,\r\n      },\r\n      audios: {\r\n        effects: {\r\n          punch: new Audio('./sounds/punch.wav'),\r\n          gettingHit: new Audio('./sounds/getting_hit.wav'),\r\n          coin: new Audio('./sounds/coin.wav'),\r\n          failure: new Audio('./sounds/mocking_failure.wav'),\r\n          gameOver: new Audio('./sounds/game_over.wav'),\r\n          deny: new Audio('./sounds/deny.flac')\r\n        },\r\n        songs: {\r\n          gameplay: new Audio('./sounds/gameplay.wav'),\r\n        },\r\n      },\r\n      control : {\r\n        isLockedPanel: false,\r\n      },\r\n      hitBoxTimer: null,\r\n      mainTimer: null,\r\n      speed: 800,\r\n      enemySquareId: null,\r\n      hits: 0,\r\n    }\r\n  }\r\n\r\ninitGame(state)\r\n\r\n}", "import { playGame } from \"../../engine/engine\"\r\nimport { screenChangeEvent } from \"../events/screen-change.event\"\r\n\r\nexport const changePage = (page) => {\r\n\r\n  const mainEl = document.querySelector('main')\r\n  const panelEl = document.querySelector('.panel')\r\n  const buttonsEl = document.querySelector('.buttons')\r\n  const introEl = document.querySelector('.intro')\r\n  \r\n    if(page=='home') {\r\n      mainEl.classList.remove('gameplay')\r\n      mainEl.classList.add('home')\r\n      introEl.classList.remove('display-none')\r\n      panelEl.classList.add('display-none')\r\n      buttonsEl.classList.add('display-none')\r\n    }\r\n    if(page=='gameplay') {\r\n      mainEl.classList.remove('home')\r\n      mainEl.classList.add('gameplay')\r\n      introEl.classList.add('display-none')\r\n      panelEl.classList.remove('display-none')\r\n      buttonsEl.classList.remove('display-none')\r\n    }\r\n  \r\n  }\r\n  \r\n  function vmPlayElListener () {\r\n    changePage('gameplay')\r\n    playGame()\r\n    document.dispatchEvent(screenChangeEvent)\r\n  }\r\n\r\n  function vmquitElListener () {\r\n    changePage('home')\r\n    document.dispatchEvent(screenChangeEvent)\r\n  }\r\n  \r\n  export const setViewManager = () => {\r\n    const playEl = document.querySelector('.play-game')\r\n    const quitEls = document.querySelectorAll('.quit-game')\r\n    \r\n    playEl.addEventListener('click', vmPlayElListener)\r\n  \r\n    quitEls.forEach(quitEl => quitEl.addEventListener('click', vmquitElListener))\r\n\r\n  }\r\n", "\r\nconst setEls = () => {\r\n\r\n  return {\r\n      pauseButtonEl : document.querySelector('.pause-button'),\r\n      toQuitButtonEl : document.querySelector('.to-quit-button'),\r\n      quitButtonEl : document.querySelector('.quit-game'),\r\n      continueButtonEls : document.querySelectorAll('.return-button'),\r\n      pauseToQuitButton : document.querySelector('.pause-to-quit-button'),\r\n      pauseModalEl : document.querySelector('.pause-modal'),\r\n      quitModalEl : document.querySelector('.quit-modal'),\r\n  }\r\n}\r\n\r\nfunction mmPauseButtonElListener () {\r\n\r\n  const els = setEls()\r\n  els.pauseModalEl?.classList.toggle('invisible')\r\n}\r\nfunction mmContinueButtonElListener () {\r\n  const els = setEls()\r\n  if(!els.pauseModalEl?.classList.contains('invisible'))  {\r\n    els.pauseModalEl?.classList.add('invisible')\r\n  }\r\n  if(!els.quitModalEl?.classList.contains('invisible')) {\r\n    els.quitModalEl?.classList.add('invisible')\r\n  }\r\n}\r\n\r\nfunction mmToQuitButtonElListener () {\r\n  const els = setEls()\r\n  els.quitModalEl?.classList.toggle('invisible')\r\n}\r\n\r\nfunction mmQuitButtonElListener () {\r\n  const els = setEls()\r\n  els.quitModalEl?.classList.toggle('invisible')\r\n}\r\n\r\nfunction mmPauseToQuitButtonListener () {\r\n  const els = setEls()\r\n  els.pauseModalEl?.classList.toggle('invisible')\r\n  els.quitModalEl?.classList.toggle('invisible')\r\n}\r\n\r\nexport const setModalManager = () => {\r\n  const els = setEls()\r\n\r\n  els.pauseButtonEl?.addEventListener('click', mmPauseButtonElListener)\r\n  \r\n  els.continueButtonEls?.forEach(continueButtonEl => {\r\n    continueButtonEl.addEventListener('click', mmContinueButtonElListener)\r\n  })\r\n  \r\n  els.toQuitButtonEl?.addEventListener('click', mmToQuitButtonElListener)\r\n  \r\n  els.quitButtonEl?.addEventListener('click', mmQuitButtonElListener)\r\n  \r\n  els.pauseToQuitButton?.addEventListener('click', mmPauseToQuitButtonListener)\r\n}\r\n\r\n", "import { setViewManager } from \"./view-manager.util\"\r\n\r\nconst { setModalManager } = require(\"./modal-manager.util\")\r\n\r\nfunction screenChangeListener () {\r\n    setViewManager()\r\n    setModalManager()\r\n} \r\n\r\nexport const setScreenChangeListener = () => {\r\n  document.addEventListener('screenChange', screenChangeListener)\r\n}", "const { screenChangeEvent } = require(\"./common/events/screen-change.event\");\r\nconst { setScreenChangeListener } = require(\"./common/utils/event-manager.util\");\r\nconst { setModalManager } = require(\"./common/utils/modal-manager.util\");\r\nconst { setViewManager } = require(\"./common/utils/view-manager.util\");\r\n\r\n\r\nconst customizedEvents = [screenChangeEvent]\r\nsetViewManager()\r\nsetModalManager()\r\nsetScreenChangeListener()\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
  "mappings": "0pBAAA,IAAAA,EAAA,GAAAC,EAAAD,EAAA,uBAAAE,IAAA,IACaA,EADbC,EAAAC,EAAA,KACaF,EAAoB,IAAI,MAAM,cAAc,ICDlD,SAASG,EAAUC,EAAIC,EAAM,CAElC,IAAIC,EACAC,EAAcF,GAAA,KAAAA,EAAM,IACpBG,EAAc,EACdC,EAAM,GAEVH,EAAW,YAAa,IAAM,CAC5BE,GAAaC,EACbL,EAAG,MAAM,QAAS,KAElBM,GAAMN,CAAE,EACLI,GAAaD,IACdI,GAAaP,CAAE,EACf,cAAcE,CAAQ,EAG1B,EAAGG,CAAG,CAER,CAEA,SAASC,GAAMN,EAAI,CACjBA,EAAG,UAAU,OAAO,uBAAuB,CAC7C,CAEA,SAASO,GAAaP,EAAI,CACxBA,EAAG,UAAU,OAAO,uBAAuB,EAC3CA,EAAG,MAAM,QAAS,GACpB,CA5BA,IAAAQ,EAAAC,EAAA,QCGO,SAASC,EAAaC,EAAO,CAClCA,EAAM,OAAO,OAAO,MAAM,SAAS,KAAO,GAC1CA,EAAM,OAAO,OAAO,MAAM,SAAS,OAAS,GAC5CA,EAAM,OAAO,OAAO,MAAM,SAAS,KAAK,CAC1C,CAEO,SAASC,EAAcD,EAAO,CACnC,QAAUE,KAAS,OAAO,OAAOF,EAAM,OAAO,OAAO,OAAO,EAC1DE,EAAM,MAAM,EACZA,EAAM,YAAY,EAEpB,QAAUA,KAAS,OAAO,OAAOF,EAAM,OAAO,OAAO,KAAK,EACxDE,EAAM,MAAM,EACZA,EAAM,YAAY,CAEtB,CACO,SAASC,EAAeH,EAAO,CACpC,QAAUE,KAAS,OAAO,OAAOF,EAAM,OAAO,OAAO,OAAO,EAC1DE,EAAM,MAAM,EAEd,QAAUA,KAAS,OAAO,OAAOF,EAAM,OAAO,OAAO,KAAK,EACxDE,EAAM,MAAM,CAEhB,CA1BA,IAAAE,EAAAC,EAAA,QCEO,SAASC,EAAeC,EAAO,CACpCA,EAAM,KAAK,SAAS,UAAUA,EAAM,OAAO,SAAS,YACpD,cAAcA,EAAM,OAAO,SAAS,EACpCA,EAAM,OAAO,UAAY,YAAY,IAAMC,EAAgBD,CAAK,EAAG,GAAI,CACzE,CAEO,SAASE,EAAgBF,EAAO,CACrCA,EAAM,KAAK,SAAS,UAAU,EAC9B,cAAcA,EAAM,OAAO,SAAS,CACtC,CAEO,SAASG,GAAeH,EAAO,CACjCA,EAAM,KAAK,SAAS,WAAW,GAChCI,EAASJ,CAAK,CAElB,CAEO,SAASC,EAAgBD,EAAO,CACrC,IAAMK,EAAO,SAASL,EAAM,KAAK,SAAS,SAAS,EACnDA,EAAM,KAAK,SAAS,UAAWK,EAAK,EACpCF,GAAeH,CAAK,CACtB,CAEO,SAASM,EAAeN,EAAO,CACpC,cAAcA,EAAM,OAAO,SAAS,CACtC,CAEO,SAASO,EAAgBP,EAAO,CACrCA,EAAM,OAAO,UAAY,YAAY,IAAMC,EAAgBD,CAAK,EAAG,GAAI,CACzE,CAEO,SAASQ,EAAsBR,EAAOS,EAAK,CAChD,IAAMJ,EAAO,SAASL,EAAM,KAAK,SAAS,SAAS,EACnDA,EAAM,KAAK,SAAS,UAAYK,EAAOI,CACzC,CApCA,IAAAC,EAAAC,EAAA,KAAAC,MCMA,SAASC,EAAgBC,EAAO,CAC9BA,EAAM,KAAK,QAAQ,QAAQC,GAAU,CACnCA,EAAO,UAAU,OAAO,OAAO,CACjC,CAAC,EAED,IAAIC,EAAe,KAAK,MAAM,KAAK,OAAO,EAAE,CAAC,EACzCC,EAAeH,EAAM,KAAK,QAAQE,CAAY,EAClDF,EAAM,OAAO,cAAgBG,EAAa,GAE1CA,EAAa,UAAU,IAAI,OAAO,EAClCH,EAAM,KAAK,MAAQ,SAAS,cAAc,QAAQ,CACpD,CAGO,SAASI,EAAUJ,EAAO,CAC/BK,GAAYL,CAAK,EACjB,cAAcA,EAAM,OAAO,WAAW,EACtCD,EAAgBC,CAAK,EAErBA,EAAM,OAAO,YAAc,YAAY,IAC9BD,EAAgBC,CAAK,EAC3BA,EAAM,OAAO,KAAK,CAGvB,CAKO,SAASM,EAAIN,EAAOO,EAAa,CACtC,GAAIP,EAAM,OAAO,QAAQ,cAsBvBA,EAAM,OAAO,OAAO,QAAQ,KAAK,OAAO,GACxCA,EAAM,OAAO,OAAO,QAAQ,KAAK,KAAK,MAvBA,CACtC,QAAQ,IAAIA,EAAM,OAAO,QAAQ,aAAa,EAEhDQ,EAAsBR,EAAO,CAAC,EAG9B,IAAMS,EADe,SAAST,EAAM,KAAK,MAAM,SAAS,EAC1B,GAC9BA,EAAM,KAAK,MAAM,UAAYS,EAC7BC,EAAU,SAAS,eAAe,GAAGH,CAAW,EAAE,CAAC,EACnDI,GAAUX,EAAO,GAAG,EAGpBA,EAAM,OAAO,OAAO,QAAQ,WAAW,YAAY,EACnDA,EAAM,OAAO,OAAO,QAAQ,WAAW,KAAK,EAC5CA,EAAM,OAAO,OAAO,QAAQ,KAAK,KAAK,EAEtCA,EAAM,OAAO,MAAM,EACnB,IAAMY,EAAWZ,EAAM,OAAO,SAAS,aAAc,KAAK,MAAMA,EAAM,OAAO,KAAK,CAAC,EAAE,GAClFY,EAAS,IACVZ,EAAM,OAAO,MAAQY,EAEvB,CAKF,CAIO,SAASD,GAAUX,EAAOa,EAAU,CACzC,cAAcb,EAAM,OAAO,WAAW,EACtCc,GAAUd,CAAK,EACf,WAAW,IAAMI,EAAUJ,CAAK,EAAGa,CAAQ,CAC7C,CAIO,SAASE,EAAOf,EAAO,CAC5B,GAAIA,EAAM,OAAO,QAAQ,cAYvBA,EAAM,OAAO,OAAO,QAAQ,KAAK,OAAO,GACxCA,EAAM,OAAO,OAAO,QAAQ,KAAK,KAAK,MAbA,CAEtC,IAAMgB,EADgBhB,EAAM,KAAK,MAAM,UAAU,UAAU,CAAC,EACrB,EACvCA,EAAM,KAAK,MAAM,UAAY,IAAIgB,CAAgB,GAE9CA,GAAkB,EACnBC,EAASjB,CAAK,GAEZA,EAAM,OAAO,OAAO,QAAQ,QAAQ,YAAY,EAChDA,EAAM,OAAO,OAAO,QAAQ,QAAQ,KAAK,EAE/C,CAIF,CAGA,SAAsBiB,EAASjB,EAAO,QAAAkB,EAAA,sBACpC,cAAclB,EAAM,OAAO,WAAW,EAEtCmB,EAAcnB,CAAK,EACnBoB,EAAcpB,CAAK,EACnBA,EAAM,OAAO,OAAO,QAAQ,SAAS,KAAK,EAC1CqB,EAAW,MAAM,EACjBC,EAAgBtB,CAAK,CACvB,GAEO,SAASc,GAAUd,EAAO,CAC/BA,EAAM,OAAO,QAAQ,cAAgB,EACvC,CAEO,SAASK,GAAYL,EAAO,CACjCA,EAAM,OAAO,QAAQ,cAAgB,EACvC,CA7GA,IAAAuB,EAAAC,EAAA,KAAAC,IACAC,IACAC,IACAC,IACAC,MCEO,SAASC,GAAkBC,EAAO,CACvCA,EAAM,KAAK,QAAQ,QAASC,GAAW,CACrCA,EAAO,YAAcC,GAAkB,KAAK,KAAMF,CAAK,CACzD,CAAC,CACH,CAEC,SAASE,GAAkBF,EAAOG,EAAO,CACtCH,EAAM,OAAO,OAAO,QAAQ,MAAM,KAAK,EACpCG,EAAM,OAAO,IAAMH,EAAM,OAAO,cACjCI,EAAIJ,EAAOG,EAAM,OAAO,EAAE,EAE1BE,EAAOL,CAAK,CAElB,CAEO,SAASM,GAAwBN,EAAO,CAC7C,IAAMO,EAAc,SAAS,cAAc,eAAe,EACpDC,EAAe,SAAS,cAAc,iBAAiB,EAC7DD,EAAY,QAAUE,GAAkB,KAAK,KAAMT,CAAK,EACxDQ,EAAa,QAAUE,EAAU,KAAK,KAAMV,CAAK,CACnD,CAEO,SAASS,GAAkBT,EAAO,CACvCU,EAAUV,CAAK,EACfW,GAAqBX,CAAK,CAC5B,CAOO,SAASW,GAAqBX,EAAO,CAC1C,IAAMY,EAAoB,SAAS,cAAc,uBAAuB,EACxEA,EAAkB,QAAUC,GAAc,KAAK,KAAMb,CAAK,CAC5D,CAEO,SAASa,GAAcb,EAAO,CACnC,IAAMc,EAAa,SAAS,cAAc,sBAAsB,EAChEA,EAAW,QAAUC,EAAS,KAAK,KAAMf,CAAK,CAChD,CAEO,SAASgB,GAAiBhB,EAAO,CACtC,SAAS,iBAAiB,gBAAgB,EAAE,QAAQiB,GAAYA,EAAS,QAAUC,EAAa,KAAK,KAAMlB,CAAK,CAAC,CACnH,CAEA,SAASmB,GAAWnB,EAAO,CACzBM,GAAwBN,CAAK,EAC7BgB,GAAiBhB,CAAK,CACxB,CAEO,SAASoB,EAAYpB,EAAO,CACjCqB,EAAgBrB,CAAK,EACrBmB,GAAWnB,CAAK,EAChBD,GAAkBC,CAAK,EACvBsB,EAAetB,CAAK,CACtB,CA9DA,IAAAuB,EAAAC,EAAA,KAEAC,IACAC,IACAC,MCIS,SAASC,EAASC,EAAO,CAC9BC,EAAYD,CAAK,EACjBE,EAAaF,CAAK,EAClBG,EAAUH,CAAK,CACjB,CAEO,SAASI,EAAUJ,EAAO,CAC/BK,EAAeL,CAAK,EACpBM,EAAeN,CAAK,EACpB,cAAcA,EAAM,OAAO,WAAW,EACtCA,EAAM,OAAO,YAAc,IAC7B,CAEO,SAASO,EAAaP,EAAO,CAClCE,EAAaF,CAAK,EAClBQ,EAAgBR,CAAK,EACrBG,EAAUH,CAAK,CACjB,CAEO,SAASS,EAAST,EAAO,CAC9BU,GAAeV,CAAK,CACtB,CAKO,SAASW,EAAcX,EAAO,CACnCY,GAA2BZ,CAAK,CAClC,CACO,SAASU,GAAeV,EAAO,CACpCa,EAAgBb,CAAK,CACvB,CAEO,SAASa,EAAgBb,EAAO,CACrCA,EAAM,KAAK,MAAM,UAAU,IAAIA,EAAM,OAAO,SAAS,oBAAoB,GACzEA,EAAM,KAAK,MAAM,UAAU,EAC3BA,EAAM,KAAK,SAAS,UAAU,EAC9BA,EAAM,OAAO,KAAK,EAClBA,EAAM,OAAO,MAAMA,EAAM,OAAO,SAAS,aACzC,cAAcA,EAAM,OAAO,WAAW,EACtC,cAAcA,EAAM,OAAO,SAAS,CACtC,CAEO,SAASY,GAA2BZ,EAAO,CAChDA,EAAM,KAAK,MAAM,UAAU,IAAIA,EAAM,OAAO,SAAS,oBAAoB,GACzEA,EAAM,KAAK,SAAS,UAAU,EAC9BA,EAAM,OAAO,KAAK,EAClBA,EAAM,OAAO,MAAMA,EAAM,OAAO,SAAS,aACzC,cAAcA,EAAM,OAAO,WAAW,EACtC,cAAcA,EAAM,OAAO,SAAS,CACtC,CA1DF,IAAAc,EAAAC,EAAA,KAEAC,IACAC,IACAC,IACAC,MCEO,SAASC,GAAY,CAE1B,IAAMC,EAAQ,CACZ,KAAM,CACJ,QAAS,SAAS,iBAAiB,SAAS,EAC5C,MAAO,SAAS,cAAc,QAAQ,EACtC,SAAU,SAAS,cAAc,OAAO,EACxC,MAAO,SAAS,cAAc,QAAQ,EACtC,MAAO,SAAS,cAAc,QAAQ,CACxC,EACA,OAAQ,CACN,SAAU,CACR,qBAAsB,EACtB,aAAc,IACd,YAAa,EACf,EACA,OAAQ,CACN,QAAS,CACP,MAAO,IAAI,MAAM,oBAAoB,EACrC,WAAY,IAAI,MAAM,0BAA0B,EAChD,KAAM,IAAI,MAAM,mBAAmB,EACnC,QAAS,IAAI,MAAM,8BAA8B,EACjD,SAAU,IAAI,MAAM,wBAAwB,EAC5C,KAAM,IAAI,MAAM,oBAAoB,CACtC,EACA,MAAO,CACL,SAAU,IAAI,MAAM,uBAAuB,CAC7C,CACF,EACA,QAAU,CACR,cAAe,EACjB,EACA,YAAa,KACb,UAAW,KACX,MAAO,IACP,cAAe,KACf,KAAM,CACR,CACF,EAEFC,EAASD,CAAK,CAEd,CAjDA,IAAAE,EAAAC,EAAA,KAKAC,MCLA,IAAAC,GAAA,GAAAC,EAAAD,GAAA,gBAAAE,EAAA,mBAAAC,IA2BE,SAASC,IAAoB,CAC3BF,EAAW,UAAU,EACrBG,EAAS,EACT,SAAS,cAAcC,CAAiB,CAC1C,CAEA,SAASC,IAAoB,CAC3BL,EAAW,MAAM,EACjB,SAAS,cAAcI,CAAiB,CAC1C,CApCF,IAGaJ,EAmCEC,EAtCfK,EAAAC,EAAA,KAAAC,IACAC,IAEaT,EAAcU,GAAS,CAElC,IAAMC,EAAS,SAAS,cAAc,MAAM,EACtCC,EAAU,SAAS,cAAc,QAAQ,EACzCC,EAAY,SAAS,cAAc,UAAU,EAC7CC,EAAU,SAAS,cAAc,QAAQ,EAE1CJ,GAAM,SACPC,EAAO,UAAU,OAAO,UAAU,EAClCA,EAAO,UAAU,IAAI,MAAM,EAC3BG,EAAQ,UAAU,OAAO,cAAc,EACvCF,EAAQ,UAAU,IAAI,cAAc,EACpCC,EAAU,UAAU,IAAI,cAAc,GAErCH,GAAM,aACPC,EAAO,UAAU,OAAO,MAAM,EAC9BA,EAAO,UAAU,IAAI,UAAU,EAC/BG,EAAQ,UAAU,IAAI,cAAc,EACpCF,EAAQ,UAAU,OAAO,cAAc,EACvCC,EAAU,UAAU,OAAO,cAAc,EAG7C,EAaaZ,EAAiB,IAAM,CAClC,IAAMc,EAAS,SAAS,cAAc,YAAY,EAC5CC,EAAU,SAAS,iBAAiB,YAAY,EAEtDD,EAAO,iBAAiB,QAASb,EAAgB,EAEjDc,EAAQ,QAAQC,GAAUA,EAAO,iBAAiB,QAASZ,EAAgB,CAAC,CAE9E,IC9CF,IAAAa,EAAA,GAAAC,EAAAD,EAAA,qBAAAE,KAcA,SAASC,IAA2B,CAdpC,IAAAC,GAiBEA,EADYC,EAAO,EACf,eAAJ,MAAAD,EAAkB,UAAU,OAAO,YACrC,CACA,SAASE,IAA8B,CAnBvC,IAAAF,EAAAG,EAAAC,EAAAC,EAoBE,IAAMC,EAAML,EAAO,GACfD,EAAAM,EAAI,eAAJ,MAAAN,EAAkB,UAAU,SAAS,eACvCG,EAAAG,EAAI,eAAJ,MAAAH,EAAkB,UAAU,IAAI,cAE9BC,EAAAE,EAAI,cAAJ,MAAAF,EAAiB,UAAU,SAAS,eACtCC,EAAAC,EAAI,cAAJ,MAAAD,EAAiB,UAAU,IAAI,YAEnC,CAEA,SAASE,IAA4B,CA7BrC,IAAAP,GA+BEA,EADYC,EAAO,EACf,cAAJ,MAAAD,EAAiB,UAAU,OAAO,YACpC,CAEA,SAASQ,IAA0B,CAlCnC,IAAAR,GAoCEA,EADYC,EAAO,EACf,cAAJ,MAAAD,EAAiB,UAAU,OAAO,YACpC,CAEA,SAASS,IAA+B,CAvCxC,IAAAT,EAAAG,EAwCE,IAAMG,EAAML,EAAO,GACnBD,EAAAM,EAAI,eAAJ,MAAAN,EAAkB,UAAU,OAAO,cACnCG,EAAAG,EAAI,cAAJ,MAAAH,EAAiB,UAAU,OAAO,YACpC,CA3CA,IACMF,EA4COH,GA7CbY,EAAAC,EAAA,KACMV,EAAS,KAEN,CACH,cAAgB,SAAS,cAAc,eAAe,EACtD,eAAiB,SAAS,cAAc,iBAAiB,EACzD,aAAe,SAAS,cAAc,YAAY,EAClD,kBAAoB,SAAS,iBAAiB,gBAAgB,EAC9D,kBAAoB,SAAS,cAAc,uBAAuB,EAClE,aAAe,SAAS,cAAc,cAAc,EACpD,YAAc,SAAS,cAAc,aAAa,CACtD,GAkCWH,GAAkB,IAAM,CA7CrC,IAAAE,EAAAG,EAAAC,EAAAC,EAAAO,EA8CE,IAAMN,EAAML,EAAO,GAEnBD,EAAAM,EAAI,gBAAJ,MAAAN,EAAmB,iBAAiB,QAASD,KAE7CI,EAAAG,EAAI,oBAAJ,MAAAH,EAAuB,QAAQU,GAAoB,CACjDA,EAAiB,iBAAiB,QAASX,EAA0B,CACvE,IAEAE,EAAAE,EAAI,iBAAJ,MAAAF,EAAoB,iBAAiB,QAASG,KAE9CF,EAAAC,EAAI,eAAJ,MAAAD,EAAkB,iBAAiB,QAASG,KAE5CI,EAAAN,EAAI,oBAAJ,MAAAM,EAAuB,iBAAiB,QAASH,GACnD,IC3DA,IAAAK,GAAA,GAAAC,EAAAD,GAAA,6BAAAE,KAIA,SAASC,IAAwB,CAC7BC,EAAe,EACfC,GAAgB,CACpB,CAPA,IAEQA,GAOKH,GATbI,GAAAC,EAAA,KAAAC,KAEM,CAAE,gBAAAH,IAAoB,YAOfH,GAA0B,IAAM,CAC3C,SAAS,iBAAiB,eAAgBC,EAAoB,CAChE,ICXA,GAAM,CAAE,kBAAAM,EAAkB,EAAI,WACxB,CAAE,wBAAAC,EAAwB,EAAI,aAC9B,CAAE,gBAAAC,EAAgB,EAAI,WACtB,CAAE,eAAAC,EAAe,EAAI,YAI3BC,GAAe,EACfC,GAAgB,EAChBC,GAAwB",
  "names": ["screen_change_event_exports", "__export", "screenChangeEvent", "init_screen_change_event", "__esmMin", "debouncer", "el", "time", "interval", "timeToBLink", "currentTime", "gap", "blink", "resetElProps", "init_debouncer", "__esmMin", "playMainSong", "state", "stopAllSounds", "audio", "pauseAllSounds", "init_sounds", "__esmMin", "resetStopWatch", "state", "stopWatchConfig", "freezeStopWatch", "verifyTimeLeft", "gameOver", "time", "pauseStopWatch", "returnStopWatch", "addSecondsToStopWatch", "sec", "init_stopwatch", "__esmMin", "init_gameplay", "setRandomSquare", "state", "square", "randomNumber", "randomSquare", "moveEnemy", "unlockPanel", "hit", "hitSquareId", "addSecondsToStopWatch", "newScore", "debouncer", "delayGame", "newSpeed", "millisec", "lockPanel", "failed", "newLifesQuantity", "gameOver", "__async", "handleEndGame", "stopAllSounds", "changePage", "freezeStopWatch", "init_gameplay", "__esmMin", "init_view_manager_util", "init_debouncer", "init_game_manager", "init_sounds", "init_stopwatch", "addListenerHitBox", "state", "square", "onMouseDownSquare", "event", "hit", "failed", "setPauseAndToQuitButton", "pauseButton", "toQuitButton", "pauseButtonConfig", "pauseGame", "setPauseToQuitButton", "pauseToQuitButton", "setQuitButton", "stopButton", "stopGame", "setReturnButtons", "buttonEl", "continueGame", "setButtons", "setGamePlay", "resetGameValues", "resetStopWatch", "init_listeners", "__esmMin", "init_game_manager", "init_gameplay", "init_stopwatch", "initGame", "state", "setGamePlay", "playMainSong", "moveEnemy", "pauseGame", "pauseAllSounds", "pauseStopWatch", "continueGame", "returnStopWatch", "stopGame", "handleQuitGame", "handleEndGame", "resetGameValuesMantainSome", "resetGameValues", "init_game_manager", "__esmMin", "init_gameplay", "init_listeners", "init_sounds", "init_stopwatch", "playGame", "state", "initGame", "init_engine", "__esmMin", "init_game_manager", "view_manager_util_exports", "__export", "changePage", "setViewManager", "vmPlayElListener", "playGame", "screenChangeEvent", "vmquitElListener", "init_view_manager_util", "__esmMin", "init_engine", "init_screen_change_event", "page", "mainEl", "panelEl", "buttonsEl", "introEl", "playEl", "quitEls", "quitEl", "modal_manager_util_exports", "__export", "setModalManager", "mmPauseButtonElListener", "_a", "setEls", "mmContinueButtonElListener", "_b", "_c", "_d", "els", "mmToQuitButtonElListener", "mmQuitButtonElListener", "mmPauseToQuitButtonListener", "init_modal_manager_util", "__esmMin", "_e", "continueButtonEl", "event_manager_util_exports", "__export", "setScreenChangeListener", "screenChangeListener", "setViewManager", "setModalManager", "init_event_manager_util", "__esmMin", "init_view_manager_util", "screenChangeEvent", "setScreenChangeListener", "setModalManager", "setViewManager", "setViewManager", "setModalManager", "setScreenChangeListener"]
}
